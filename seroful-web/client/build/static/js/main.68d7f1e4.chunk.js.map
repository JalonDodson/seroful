{"version":3,"sources":["util/api.js","store/store.js","styles/loginStyles.js","components/LoginForm/LoginForm.js","styles/drawerStyles.js","components/PageDrawer/PageDrawer.js","components/Pages/Home/Home.js","components/Pages/Profile/Profile.js","components/Pages/Friends/Friends.js","components/Pages/Planner/Planner.js","styles/journalStyles.js","components/Pages/Journal/Journal.js","components/Pages/Settings/Settings.js","components/Pages/NotFound/NotFound.js","components/Pages/Splash/Splash.js","components/Navigator/Navigator.js","App.js","config.js","serviceWorker.js","index.js","resources/molecule.png"],"names":["getActiveUser","email","a","firebase","auth","currentUser","getIdToken","token","axios","get","headers","Authorization","then","resp","data","res","console","log","createUser","username","displayName","post","updateUser","userData","patch","photo","medicines","illnesses","plans","journals","createEntry","entry","timestamp","Date","now","userState","atom","key","default","pw","newUser","txt","errorMsg","emailError","pwError","pwText","userTxt","userError","loginStyles","makeStyles","theme","loginDiv","textAlign","seroful","fontFamily","color","fontSize","fontWeight","fontStyle","images","height","width","button1","backgroundImage","marginTop","marginRight","button2","names","password","helper","textTransform","textTheme","createMuiTheme","palette","primary","main","LoginForm","styles","useRecoilState","userInfo","setUserInfo","setNewUser","useSetRecoilState","useState","enableRegister","setEnableRegister","loginHelper","setLoginHelper","registerHelper","setRegisterHelper","error","helperText","pwHelpers","setPwHelpers","pwConfirm","setPwConfirm","useEffect","checkIfUsed","includes","length","firestore","collection","forEach","b","c","login","signInWithEmailAndPassword","catch","e","h","code","Helmet","className","ThemeProvider","Typography","variant","src","molecule","alt","autoComplete","TextField","label","value","onChange","ev","x","target","onBlur","onFocus","type","Button","onClick","startIcon","disabled","createUserWithEmailAndPassword","api","register","drawerStyles","root","display","drawer","drawerPaper","backgroundColor","opacity","header","mixins","toolbar","PageDrawer","Drawer","classes","paper","anchor","Divider","List","ListItem","button","component","href","ListItemIcon","ListItemText","signOut","Home","activeUser","useRecoilValue","style","left","useStyles","maxWidth","avatar","marginLeft","content","purple","getContrastText","deepPurple","columns","field","headerName","rows","id","goalItem","goalDescription","Profile","props","Card","CardActionArea","Avatar","CardContent","gutterBottom","pageSize","checkboxSelection","Friends","Planner","journalStyles","themes","container","justifyContent","flexGrow","margin","Journal","user","submitNewEntry","vairent","newEntry","vairant","Settings","NotFound","Splash","unfilled","filled","logOne","setLogOne","logTwo","setLogTwo","setIllnesses","userIllnesses","setUserIllness","illnessList","query","doc","push","err","i","Dialog","open","onClose","aria-labelledby","disableBackdropClick","disableEscapeKeyDown","DialogTitle","DialogContent","DialogContentText","DialogActions","Autocomplete","multiple","options","disableCloseOnSelect","getOptionLabel","illness","renderOption","selected","Checkbox","icon","checkedIcon","checked","renderInput","params","placeholder","val","multiline","newVal","split","name","freq","handleMedName","fullWidth","Navigator","userNew","exact","path","render","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","init","setInit","setUser","setActive","onAuthStateChanged","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.68d7f1e4.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { nanoid } from \"nanoid\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\n/*\n  While in development, http://localhost:4000/ should be used for all API requests.\n  When built, only /path should be used in the axios requests.\n*/\n// axios stuff\n// const axios = axios.create();\n\nexport const getActiveUser = async (email) => {\n  const token =\n    firebase.auth().currentUser &&\n    (await firebase.auth().currentUser.getIdToken());\n\n  try {\n    const res = await axios\n      .get(`/users?email=${email}`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then((resp) => resp.data);\n    console.log(res);\n    return res;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const createUser = async (username, displayName, email) => {\n  const token =\n  firebase.auth().currentUser &&\n  (await firebase.auth().currentUser.getIdToken());\n\n  try {\n    const res = await axios.post(`/users`, {\n      displayName: displayName,\n      email: email,\n      username: username,\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    return res;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const updateUser = async (userData) => {\n  const token =\n  firebase.auth().currentUser &&\n  (await firebase.auth().currentUser.getIdToken());\n  try {\n    const res = await axios.patch(`/users?email=${userData.email}`, {\n      username: userData.username,\n      email: userData.email,\n      displayName: userData.displayName,\n      photo: userData.photo,\n      medicines: userData.medicines,\n      illnesses: userData.illnesses,\n      plans: userData.plans,\n      journals: userData.journals,\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    return res;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const createEntry = async (entry, email) => {\n  const token =\n  firebase.auth().currentUser &&\n  (await firebase.auth().currentUser.getIdToken());\n\n  try {\n    const res = await axios.post(`/users/entries?email=${email}`, {\n      entry: entry,\n      timestamp: Date().now(),\n\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    return res;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getEntries = async (email) => {\n  const token =\n  firebase.auth().currentUser &&\n  (await firebase.auth().currentUser.getIdToken());\n\n  try {\n    const res = await axios\n      .get(`/users/entries?email=${email}`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then((resp) => resp.data);\n    return res;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const videoRoom = async (roomId) => {\n  const token =\n  firebase.auth().currentUser &&\n  (await firebase.auth().currentUser.getIdToken());\n\n  try {\n    let res = null;\n    if (roomId) {\n      res = await axios.get(`/video-chat/${roomId}`);\n    } else {\n      res = await axios.get(`/video-chat/${nanoid()}`);\n    }\n    return res;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { atom } from \"recoil\";\n\nexport const userState = atom({\n  key: \"userState\",\n  default: {\n    username: \"\",\n    email: \"\",\n    pw: \"\",\n    displayName: \"\",\n    photo: {},\n    medicines: [],\n    illnesses: [],\n    plans: [],\n    journals: [],\n  },\n});\n\nexport const userToken = atom({\n  key: \"userToken\",\n  default: \"\",\n});\n\nexport const msgState = atom({\n  key: \"msgState\",\n  default: \"\",\n});\n\nexport const loginHelperState = atom({\n  key: \"loginHelperState\",\n  default: {\n    txt: \"\",\n    errorMsg: \"\",\n    emailError: false,\n    pwError: false,\n  },\n});\n\nexport const registerHelperState = atom({\n  key: \"registerHelperState\",\n  default: {\n    txt: \"\",\n    pwText: \"\",\n    userTxt: \"\",\n    emailError: false,\n    pwError: false,\n    userError: false,\n  },\n});\n\nexport const newUser = atom({\n  key: \"newUser\",\n  default: false,\n});\n","import { makeStyles, createMuiTheme } from \"@material-ui/core/styles\";\n\nexport const loginStyles = makeStyles((theme) => ({\n  loginDiv: {\n    textAlign: \"center\",\n  },\n  seroful: {\n    fontFamily: \"Happy Monkey\",\n    color: \"#F2EDEB\",\n    fontSize: \"56px\",\n    fontWeight: \"bold\",\n    fontStyle: \"italic\",\n  },\n  images: {\n    height: 350,\n    width: 350,\n  },\n  button1: {\n    backgroundImage:\n      \"linear-gradient(90deg, rgba(236,217,238,1) 0%, rgba(226,221,220,1) 51%, rgba(236,217,238,1) 100%);\",\n    width: \"9.5%\",\n    marginTop: \".5%\",\n    marginRight: \"1%\",\n  },\n  button2: {\n    backgroundImage:\n      \"linear-gradient(90deg, rgba(236,217,238,1) 0%, rgba(226,221,220,1) 51%, rgba(236,217,238,1) 100%);\",\n    marginTop: \".5%\",\n    width: \"9.5%\",\n  },\n  email: {\n    width: \"20%\",\n  },\n  username: {\n    width: \"20%\",\n  },\n  names: {\n    width: \"20%\",\n  },\n  password: {\n    width: \"20%\",\n  },\n  helper: {\n    fontStyle: \"italic\",\n    color: \"#FF0000\",\n    fontSize: 20,\n    fontFamily: \"Happy Monkey\",\n    textTransform: \"capitalize\",\n  },\n}));\n\nexport const textTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#F2EDEB\",\n    },\n  },\n});\n","import React, { useEffect, useState } from \"react\"; // react\nimport { Helmet } from \"react-helmet\"; // react\nimport { Button, TextField, Typography } from \"@material-ui/core\"; // material-ui\nimport { ThemeProvider } from \"@material-ui/core/styles\"; // material-ui\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\"; // material-ui\nimport firebase from \"firebase/app\"; // firebase\nimport \"firebase/auth\"; // firebase\nimport \"firebase/firestore\"; // firebase\nimport * as api from \"../../util/api\"; // api\nimport { userState, newUser } from \"../../store/store\"; // state\nimport { useRecoilState, useSetRecoilState } from \"recoil\"; // state\nimport molecule from \"../../resources/molecule.png\"; // logo\nimport { loginStyles, textTheme } from \"../../styles/loginStyles\"; // styles\n\nexport const LoginForm = () => {\n  const styles = loginStyles();\n\n  const [userInfo, setUserInfo] = useRecoilState(userState),\n    setNewUser = useSetRecoilState(newUser),\n    [enableRegister, setEnableRegister] = useState(!1);\n\n  const [loginHelper, setLoginHelper] = useState({\n      txt: \"\",\n      errorMsg: \"\",\n      emailError: !1,\n      pwError: !1,\n    }),\n    [registerHelper, setRegisterHelper] = useState({\n      txt: \"\",\n      pwText: \"\",\n      userTxt: \"\",\n      emailError: !1,\n      pwError: !1,\n      userError: !1,\n    }),\n    [pwHelpers, setPwHelpers] = useState({ error: !1, helperText: \"\" }),\n    [pwConfirm, setPwConfirm] = useState(\"\");\n\n  useEffect(() => {\n    return (\n      loginHelper.errorMsg &&\n        (\"auth/invalid-email\" === loginHelper.errorMsg\n          ? setLoginHelper(\n              (a) =>\n                (a = {\n                  ...a,\n                  txt: \"Oh noes, that's an invalid email!\",\n                  emailError: !0,\n                })\n            )\n          : \"auth/user-not-found\" === loginHelper.errorMsg\n          ? setLoginHelper(\n              (a) =>\n                (a = {\n                  ...a,\n                  txt: \"Dangit, that email isn't registered!\",\n                  emailError: !0,\n                })\n            )\n          : \"auth/wrong-password\" === loginHelper.errorMsg &&\n            setLoginHelper(\n              (a) =>\n                (a = {\n                  ...a,\n                  pwText:\n                    \"Aw man, that's the wrong password! Remember, it's case-sensitive!\",\n                  pwError: !0,\n                })\n            )),\n      registerHelper.errorMsg &&\n        (\"auth/email-already-in-use\" === registerHelper.errorMsg\n          ? setRegisterHelper(\n              (a) =>\n                (a = {\n                  ...a,\n                  txt:\n                    \"Aw snap, that email is already in use! Did you mean to login?\",\n                  emailError: !0,\n                })\n            )\n          : \"auth/invalid-email\" === registerHelper.errorMsg &&\n            setRegisterHelper(\n              (a) =>\n                (a = {\n                  ...a,\n                  txt: \"Oh noes, that's an invalid email!\",\n                  emailError: !0,\n                })\n            )),\n      pwConfirm && pwConfirm !== userInfo.pw\n        ? setPwHelpers(\n            (a) => (a = { error: !0, helperText: \"Passwords do not match!\" })\n          )\n        : setPwHelpers((a) => (a = { error: !1, helperText: \"\" }))\n    );\n    // eslint-disable-next-line\n  }, [loginHelper.errorMsg, registerHelper.errorMsg, pwConfirm]);\n\n  const checkIfUsed = () => {\n    setRegisterHelper(\n      (a) => (a = { ...a, txt: \"\", userTxt: \"\", userError: !1, emailError: !1 })\n    );\n\n    return (\n      (userInfo.email.includes(\"@\") || 4 <= userInfo.username.length) &&\n      firebase\n        .firestore()\n        .collection(\"users\")\n        .get()\n        .then((a) => {\n          a.forEach((a) => {\n            const { email: b, username: c } = a.data(),\n              // eslint-disable-next-line\n              d =\n                b === userInfo.email\n                  ? setRegisterHelper(\n                      (a) =>\n                        (a = {\n                          ...a,\n                          txt: \"That email has already been taken!\",\n                          emailError: !0,\n                        })\n                    )\n                  : null,\n              // eslint-disable-next-line\n              e =\n                c === userInfo.username\n                  ? setRegisterHelper(\n                      (a) =>\n                        (a = {\n                          ...a,\n                          userTxt: \"That username has already been taken!\",\n                          userError: !0,\n                        })\n                    )\n                  : null;\n          });\n        })\n    );\n  };\n\n  const login = async () => {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(userInfo.email, userInfo.pw)\n      .then(console.log(`User has triggered a login attempt.`))\n      .catch((e) => {\n        setLoginHelper((h) => (h = { ...h, errorMsg: e.code }));\n        console.log(e);\n      });\n  };\n\n  //\n  const register = () => {\n    const { username, displayName, email, pw } = userInfo;\n    try {\n      firebase.auth().createUserWithEmailAndPassword(email, pw);\n      api.createUser(username, displayName, email);\n    } catch (e) {\n      setRegisterHelper((h) => (h = { ...h, errorMsg: e.code }));\n    }\n    setNewUser(!0);\n  };\n\n  return (\n    <>\n      {!enableRegister ? (\n        <>\n          <Helmet>\n            <title>Seroful - Login</title>\n          </Helmet>\n          <div className={styles.loginDiv}>\n            <ThemeProvider theme={textTheme}>\n              <Typography className={styles.seroful} variant=\"h3\">\n                Seroful\n              </Typography>\n              <img\n                className={styles.images}\n                src={molecule}\n                alt=\"molecule.png\"\n              />\n              <br />\n              <form autoComplete=\"off\">\n                <TextField\n                  label=\"Email\"\n                  type=\"email\"\n                  variant=\"filled\"\n                  className={styles.email}\n                  error={loginHelper.emailError}\n                  helperText={loginHelper.txt}\n                  value={userInfo.email}\n                  onFocus={() =>\n                    setLoginHelper(\n                      (x) => (x = { ...x, emailError: false, txt: \"\" })\n                    )\n                  }\n                  onChange={(ev) =>\n                    setUserInfo((x) => (x = { ...x, email: ev.target.value }))\n                  }\n                />\n                <br />\n                <TextField\n                  label=\"Password\"\n                  type=\"password\"\n                  variant=\"filled\"\n                  className={styles.password}\n                  error={loginHelper.pwError}\n                  helperText={loginHelper.pwText}\n                  value={userInfo.pw}\n                  onFocus={() =>\n                    setLoginHelper(\n                      (x) => (x = { ...x, pwError: false, pwText: \"\" })\n                    )\n                  }\n                  onChange={(ev) =>\n                    setUserInfo((x) => (x = { ...x, pw: ev.target.value }))\n                  }\n                />\n                <br />\n                <Button\n                  variant=\"contained\"\n                  className={styles.button1}\n                  onClick={() => login()}\n                >\n                  Login\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  className={styles.button2}\n                  onClick={() => setEnableRegister(true)}\n                >\n                  Register\n                </Button>\n              </form>\n            </ThemeProvider>\n          </div>\n        </>\n      ) : (\n        <>\n          <Helmet>\n            <title>Seroful - Register</title>\n          </Helmet>\n          <div className={styles.loginDiv}>\n            <ThemeProvider theme={textTheme}>\n              <Typography className={styles.seroful} variant=\"h3\">\n                Seroful\n              </Typography>\n              <img\n                className={styles.images}\n                src={molecule}\n                alt=\"molecule.png\"\n              />\n              <form autoComplete=\"off\">\n                <TextField\n                  label=\"Display Name\"\n                  variant=\"filled\"\n                  className={styles.names}\n                  value={userInfo.displayName}\n                  onChange={(ev) =>\n                    setUserInfo(\n                      (x) => (x = { ...x, displayName: ev.target.value })\n                    )\n                  }\n                />\n                <br />\n                <TextField\n                  error={registerHelper.userError}\n                  helperText={registerHelper.userTxt}\n                  label=\"Username\"\n                  variant=\"filled\"\n                  className={styles.username}\n                  value={userInfo.username}\n                  onBlur={() => checkIfUsed()}\n                  onChange={(ev) =>\n                    setUserInfo(\n                      (x) => (x = { ...x, username: ev.target.value })\n                    )\n                  }\n                />\n                <br />\n                <br />\n                <TextField\n                  error={registerHelper.emailError}\n                  helperText={registerHelper.txt}\n                  onBlur={() => checkIfUsed()}\n                  onFocus={() =>\n                    setRegisterHelper(\n                      (x) => (x = { ...x, emailError: false, txt: \"\" })\n                    )\n                  }\n                  label=\"Email\"\n                  type=\"email\"\n                  variant=\"filled\"\n                  className={styles.email}\n                  value={userInfo.email}\n                  onChange={(ev) =>\n                    setUserInfo((x) => (x = { ...x, email: ev.target.value }))\n                  }\n                />\n                <br />\n                <TextField\n                  error={\n                    userInfo.pw && userInfo.pw.length < 6 && userInfo.pw !== \"\"\n                  }\n                  helperText={\n                    userInfo.pw && userInfo.pw.length < 6 && userInfo.pw !== \"\"\n                      ? \"Your password must be at least 6 characters!\"\n                      : \"\"\n                  }\n                  label=\"Password\"\n                  type=\"password\"\n                  variant=\"filled\"\n                  className={styles.password}\n                  value={userInfo.pw}\n                  onChange={(ev) =>\n                    setUserInfo((x) => (x = { ...x, pw: ev.target.value }))\n                  }\n                />\n                <br />\n                <TextField\n                  error={pwHelpers.error}\n                  helperText={pwHelpers.helperText}\n                  label=\"Confirm Password\"\n                  type=\"password\"\n                  variant=\"filled\"\n                  value={pwConfirm}\n                  className={styles.password}\n                  onBlur={() =>\n                    setPwHelpers((x) => (x = { helperText: \"\", error: false }))\n                  }\n                  onChange={(ev) => setPwConfirm(ev.target.value)}\n                />\n                <br />\n                <Button\n                  variant=\"contained\"\n                  className={styles.button1}\n                  onClick={() => setEnableRegister(false)}\n                  startIcon={<ArrowBackIcon />}\n                >\n                  Back to Login\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  className={styles.button2}\n                  disabled={\n                    (userInfo.pw && userInfo.pw.length < 6) ||\n                    registerHelper.emailError ||\n                    registerHelper.userError ||\n                    pwConfirm !== userInfo.pw\n                  }\n                  onClick={() => register()}\n                >\n                  Register\n                </Button>\n              </form>\n            </ThemeProvider>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const drawerStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  drawer: {\n    width: 151.5,\n  },\n  drawerPaper: {\n    backgroundColor: \"#F2EDEB\",\n    opacity: 0.85,\n    width: 151.5,\n  },\n  header: theme.mixins.toolbar,\n  seroful: {\n    marginTop: \"7.5%\",\n    textAlign: \"center\",\n    fontFamily: \"Happy Monkey\",\n    color: \"#bd93bd\",\n    fontSize: \"35px\",\n    fontWeight: \"bold\",\n    fontStyle: \"italic\",\n  },\n}));\n","import React from \"react\";\n\nimport {\n  // Button,\n  Divider,\n  Typography,\n  Drawer,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  // Link,\n} from \"@material-ui/core/\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport FolderOpenIcon from \"@material-ui/icons/FolderOpen\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport MenuBookIcon from \"@material-ui/icons/MenuBook\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\n\nimport { drawerStyles } from \"../../styles/drawerStyles\";\n\nexport const PageDrawer = () => {\n  const styles = drawerStyles();\n\n  const logout = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => console.log(\"User signed out.\"));\n  };\n  return (\n    <>\n      <Drawer\n        className={styles.drawer}\n        variant=\"permanent\"\n        classes={{ paper: styles.drawerPaper }}\n        anchor=\"left\"\n      >\n        <div className={styles.header}>\n          <Typography className={styles.seroful} variant=\"h3\">\n            Seroful\n          </Typography>\n        </div>\n        <Divider />\n        <List>\n          <ListItem button key=\"Home\" component=\"a\" href=\"/\">\n            <ListItemIcon>\n              <HomeIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Home\" />\n          </ListItem>\n          <ListItem button key=\"Profile\" component=\"a\" href=\"/profile\">\n            <ListItemIcon>\n              <PersonIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Profile\" />\n          </ListItem>\n          <ListItem button key=\"Friends\" component=\"a\" href=\"/friends\">\n            <ListItemIcon>\n              <PeopleIcon />\n            </ListItemIcon>\n            <ListItemText\n              primary=\"Friends\"\n              onClick={() => console.log(\"put a menu here soon\")}\n            />\n          </ListItem>\n          <ListItem button key=\"Planner\" component=\"a\" href=\"/planner\">\n            <ListItemIcon>\n              <FolderOpenIcon />\n            </ListItemIcon>\n            <ListItemText\n              primary=\"Planner\"\n              onClick={() => console.log(\"put a menu here soon\")}\n            />\n          </ListItem>\n          <ListItem button key=\"Journal\" component=\"a\" href=\"/journal\">\n            <ListItemIcon>\n              <MenuBookIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Journal\" />\n          </ListItem>\n          <ListItem button key=\"Settings\" component=\"a\" href=\"/settings\">\n            <ListItemIcon>\n              <SettingsIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Settings\" />\n          </ListItem>\n          <ListItem button key=\"Sign Out\" onClick={() => logout()}>\n            <ListItemIcon>\n              <ExitToAppIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Sign Out\" />\n          </ListItem>\n        </List>\n      </Drawer>\n    </>\n  );\n};\n","import { Button } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nimport { userState } from \"../../../store/store\";\nimport { useRecoilValue } from \"recoil\";\n\nimport { PageDrawer } from \"../../PageDrawer/PageDrawer\";\n// import { homeStyles } from \"../../../styles/homeStyles\";\n\nexport const Home = () => {\n  const activeUser = useRecoilValue(userState);\n\n  return (\n    <>\n      <Helmet>\n        <title>Seroful - Home</title>\n      </Helmet>\n      <Button style={{ left: \"50%\" }} onClick={() => console.log(activeUser)}>Click Me</Button>\n      <PageDrawer />\n    </>\n  );\n};\n","import React from \"react\";\n// , ThemeProvider\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\n// import CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n// import CardMedia from '@material-ui/core/CardMedia';\n// import Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport { deepPurple } from '@material-ui/core/colors';\nimport { DataGrid } from '@material-ui/data-grid';\n\n// Material UI Class Styles\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n    height: 400,\n  },\n  avatar: {\n    display: 'flex',\n    marginLeft: '150px',\n  },\n  content: {\n    display: 'flex',\n    marginLeft: '100px',\n  },\n  purple: {\n    display: 'flex',\n    marginLeft: '150px',\n    color: theme.palette.getContrastText(deepPurple[500]),\n    backgroundColor: deepPurple[500],\n  },\n  main: {\n    marginTop: '30%',\n  }\n}));\n\n// Settings For Data Table [Production PLan Goals]\n\nconst columns = [\n  { field: 'id', headerName: 'ID', width: 70 },\n  { field: 'goalItem', headerName: 'Goal', width: 130 },\n  { field: 'goalDescription', headerName: 'Description', width: 130 },\n];\n\n\nconst rows = [\n  { id: 1, goalItem: 'Example Goal', goalDescription: 'Example Description'},\n];\n\nexport const Profile = (props) => {\n  const classes = useStyles();\n  return (\n  <>\n    <h1>Welcome To Your Profile!</h1>\n    <Card className={classes.root}>\n      <CardActionArea className={classes.main}>\n        <Avatar className={classes.purple}>S</Avatar>\n        <CardContent className={classes.content}>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            My Name\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            This is my profile page.\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n    <hr />\n    <br />\n    <div style={{ height: 400, width: '100%', backgroundColor: '#fff' }}>\n      <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection />\n    </div>\n  </>);\n};\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\n\nimport { PageDrawer } from \"../../PageDrawer/PageDrawer\";\n// import { friendsStyles } from \"../../../styles/friendsStyles\";\n\nexport const Friends = () => {\n    // const styles = friendsStyles();\n  return (\n    <>\n      <Helmet>\n        <title>Seroful - Friends</title>\n      </Helmet>\n      <PageDrawer />\n    </>\n  );\n};\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nimport { PageDrawer } from \"../../PageDrawer/PageDrawer\";\n// import { plannerStyles } from \"../../../styles/plannerStyles\";\n\nexport const Planner = (props) => {\n  // const styles = plannerStyles();\n  return (\n    <>\n      <Helmet>\n        <title> Seroful - User's Production Planner</title>\n      </Helmet>\n      <PageDrawer />\n      <h1>something here</h1>\n    </>\n  );\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const journalStyles = makeStyles((themes) => ({\n    container: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginLeft: 151.5,\n    },\n    header: {\n        flexGrow: 1,\n        textAlign:'center',\n        margin: 'auto'\n    },\n}));","import React, { useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { PageDrawer } from \"../../PageDrawer/PageDrawer\";\nimport { journalStyles } from \"../../../styles/journalStyles\";\nimport { useRecoilState } from \"recoil\";\nimport { userState } from \"../../../store/store\";\nimport * as api from \"../../../util/api\"\n\nimport {\n  Button,\n  //   Dialog,\n  //   DialogActions,\n  //   DialogContent,\n  //   DialogContentText,\n  //   DialogTitle,\n  //   Typography,\n  TextField,\n  Typography,\n  //   Checkbox,\n} from \"@material-ui/core\";\n\nexport const Journal = () => {\n  const styles = journalStyles();\n\n  const [user, setUser] = useRecoilState(userState);\n  console.log(user);\n  // const [entry, setEntry] = useRecoilState(userState.journals);\n\n  const entries = [];\n\n  const getEntries = async userEmail => await api.getEntries(userEmail);\n\n  const submitNewEntry = async entry => await api.createEntry(entry);\n\n  return (\n    <>\n      <Helmet>\n        <title>Seroful - Journal</title>\n      </Helmet>\n      <PageDrawer />\n      <div className={styles.container}>\n        <header className={styles.header}>\n          <hr />\n          <Typography variant=\"h1\">\n            {user.displayName}'s Journal Entries\n          </Typography>\n          <hr />\n        </header>\n        <form>\n          <TextField\n            label=\"New Entry\"\n            type=\"text\"\n            vairent=\"filled\"\n            className={styles.newEntry}\n          />\n          <Button\n            vairant=\"contained\"\n            onClick={(ev) =>\n              submitNewEntry((x) => {\n                x = ev.target.value;\n              })\n            }\n          >\n            Add Journal Entry\n          </Button>\n        </form>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\n\nimport { PageDrawer } from \"../../PageDrawer/PageDrawer\";\n// import { settingsStyles } from \"../../../styles/settingsStyles\";\n\nexport const Settings = () => {\n  // const styles = settingsStyles();\n  return (\n    <>\n      <Helmet>\n        <title>Seroful - Settings</title>\n      </Helmet>\n      <PageDrawer />\n    </>\n  );\n};\n","import React from \"react\";\n\nexport const NotFound = () => {\n    return <h3>This is the not found page. Do stuff here</h3>\n}","import React, { useEffect, useState } from \"react\";\n\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport * as api from \"../../../util/api\";\n\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Typography,\n  TextField,\n  Checkbox,\n} from \"@material-ui/core\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\n\nimport { useSetRecoilState, useRecoilState } from \"recoil\";\nimport { newUser, userState } from \"../../../store/store\";\n\nexport const Splash = () => {\n  const unfilled = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\n  const filled = <CheckBoxIcon fontSize=\"small\" />;\n\n  const setNewUser = useSetRecoilState(newUser);\n\n  const [logOne, setLogOne] = useState(true);\n  const [logTwo, setLogTwo] = useState(false);\n\n  const [illnesses, setIllnesses] = useState([]);\n  const [userIllnesses, setUserIllness] = useRecoilState(userState);\n\n  const handleFirst = () => {\n    setLogTwo(true);\n    setLogOne(false);\n  };\n\n  const handleSecond = () => {\n    api.updateUser(userIllnesses);\n    setNewUser(false);\n  };\n  \n  useEffect(() => {\n    let illnessList = [];\n    firebase\n      .firestore()\n      .collection(\"illnesses\")\n      .get()\n      .then((query) => query.forEach((doc) => illnessList.push(doc.data())))\n      .catch((err) => console.log(err));\n    setIllnesses((i) => (i = illnessList));\n  }, []);\n\n  const handleMedName = (ev) => {\n    const newVal = ev.target.value.split(`\\n`);\n\n    for (let i = 0; i < newVal.length; i++) {\n      setUserIllness(\n        (x) =>\n          (x = {\n            ...x,\n            medicines: [\n              ...x.medicines,\n              {\n                name: newVal[i],\n                freq: 0,\n              },\n            ],\n          })\n      );\n    }\n    console.log(userIllnesses);\n  };\n  // TODO: FIX THEME INCONSISTENCIES (see login)\n  return (\n    <>\n      {logOne && (\n        <Dialog\n          open={logOne}\n          onClose={() => setLogOne(false)}\n          aria-labelledby=\"title\"\n          disableBackdropClick\n          disableEscapeKeyDown\n        >\n          <DialogTitle id=\"title\">Additional Information</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Thank you for registering! In order to best serve your Seroful\n              experience, we would like to add some additional information about\n              any medicines and mental illnesses you might have. Would you like\n              to add this information now? You can opt to add it later, or not\n              at all.\n              <br />\n              <Typography variant=\"caption\">\n                This information is strictly confidential, only you can see it!\n              </Typography>\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button\n              variant=\"contained\"\n              style={{ textTransform: \"capitalize\" }}\n              onClick={() => setNewUser(false)}\n            >\n              No Thanks\n            </Button>\n            <Button\n              variant=\"contained\"\n              style={{ textTransform: \"capitalize\" }}\n              onClick={() => handleFirst()}\n            >\n              Let's Go\n            </Button>\n          </DialogActions>\n        </Dialog>\n      )}\n\n      {logTwo && (\n        <Dialog\n          open={logTwo}\n          onClose={() => setLogTwo(false)}\n          aria-labelledby=\"title\"\n          disableBackdropClick\n          disableEscapeKeyDown\n        >\n          <DialogTitle id=\"title\">Additional Information</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Thank you so much! You can add as many options below as you'd\n              like. Pressing cancel will take no action and no information will\n              be taken in.\n            </DialogContentText>\n            <Autocomplete\n              multiple\n              id=\"illnesses\"\n              options={illnesses}\n              disableCloseOnSelect\n              getOptionLabel={(i) => i.illness}\n              renderOption={(i, { selected }) => (\n                <>\n                  <Checkbox\n                    icon={unfilled}\n                    style={{ marginRight: 8 }}\n                    checkedIcon={filled}\n                    checked={selected}\n                  />\n                  {i.illness}\n                </>\n              )}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  variant=\"filled\"\n                  label=\"Illnesses (Select Multiple)\"\n                  placeholder=\"Illnesses\"\n                />\n              )}\n              onChange={(ev, val) =>\n                setUserIllness((x) => (x = { ...x, illnesses: val }))\n              }\n            />\n            <TextField\n              multiline\n              helperText=\"Put each medicine on a new line!\"\n              type=\"array\"\n              label=\"Medicines (Separate each on a new line)\"\n              placeholder=\"Medicines\"\n              onBlur={(ev) => handleMedName(ev)}\n              fullWidth\n              variant=\"filled\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button\n              variant=\"contained\"\n              style={{ textTransform: \"capitalize\" }}\n              onClick={() => setNewUser(false)}\n            >\n              Cancel\n            </Button>\n            <Button\n              variant=\"contained\"\n              style={{ textTransform: \"capitalize\" }}\n              onClick={() => handleSecond()}\n            >\n              Finish\n            </Button>\n          </DialogActions>\n        </Dialog>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport {\n  Home,\n  Profile,\n  Friends,\n  Planner,\n  Journal,\n  Settings,\n  NotFound,\n  Splash,\n} from \"../Pages/index\";\n\nimport { newUser } from \"../../store/store\";\nimport { useRecoilValue } from \"recoil\";\nexport const Navigator = () => {\n  const userNew = useRecoilValue(newUser);\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={() => (userNew ? <Splash /> : <Home />)}\n        />\n        {/* // TODO: Make route for profile /users/(username or uid)/profile */}\n        <Route path=\"/profile\" render={() => <Profile />} />\n        {/* // TODO: Make route for planner /users/(username or uid)/planner */}\n        <Route path=\"/friends\" render={() => <Friends />} />\n        <Route path=\"/planner\" render={() => <Planner />} />\n        <Route path=\"/journal\" render={() => <Journal />} />\n        <Route path=\"/settings\" render={() => <Settings />} />\n        <Route path=\"*\" render={() => <NotFound />} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\n\nimport { LoginForm } from \"./components/LoginForm/LoginForm\";\nimport { Navigator } from \"./components/Navigator/Navigator\";\nimport \"./App.css\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nimport { firebaseConfig } from \"./config\";\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\nimport { userState, userToken } from \"./store/store\";\nimport * as api from \"./util/api\";\n\nfirebase.initializeApp(firebaseConfig);\n\nfunction App() {\n  const [init, setInit] = useState(true);\n  const [user, setUser] = useState();\n  const [activeUser, setActive] = useRecoilState(userState);\n  // eslint-disable-next-line\n\n  const onAuthStateChanged = async (user) => {\n    setUser(user);\n    if (user)\n      await api.getActiveUser(user.email).then((resp) => setActive(resp));\n    if (init) setInit(false);\n  };\n\n  // useEffect(() => {\n  //   const subscriber = firebase.firestore()\n  //   .collection(\"users\")\n  //   .doc(user.email)\n  // })\n\n  useEffect(() => {\n    const subscriber = firebase.auth().onAuthStateChanged(onAuthStateChanged);\n    return subscriber;\n    // eslint-disable-next-line\n  }, []);\n\n  if (init) return null;\n  if (!user) {\n    return <LoginForm />;\n  }\n  return (\n    <>\n      <Navigator />\n    </>\n  );\n}\nexport default App;\n","export const firebaseConfig = {\n    apiKey: \"AIzaSyBJg9iVnvGl6F5TFBRTmoWn-3A5IxTgywI\",\n    authDomain: \"seroful.firebaseapp.com\",\n    databaseURL: \"https://seroful.firebaseio.com\",\n    projectId: \"seroful\",\n    storageBucket: \"seroful.appspot.com\",\n    messagingSenderId: \"531332449318\",\n    appId: \"1:531332449318:web:9b85133f0399aa898fd2e7\",\n    measurementId: \"G-XYW74Z91MJ\",\n  };\n  ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { RecoilRoot } from \"recoil\";\n\nReactDOM.render(\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/molecule.12ccad98.png\";"],"sourceRoot":""}