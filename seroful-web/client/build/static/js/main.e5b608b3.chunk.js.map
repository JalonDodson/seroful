{"version":3,"sources":["util/api.js","store/store.js","styles/loginStyles.js","components/LoginForm/LoginForm.js","styles/drawerStyles.js","components/PageDrawer/PageDrawer.js","components/Pages/Home/Home.js","styles/homeStyles.js","components/Pages/NotFound/NotFound.js","components/Pages/Planner/Planner.js","styles/profileStyles.js","components/Pages/Profile/Profile.js","components/Navigator/Navigator.js","App.js","config.js","serviceWorker.js","index.js","resources/molecule.png"],"names":["createUser","username","displayName","email","a","axios","post","res","console","log","userState","atom","key","default","pw","photoURL","gradeLevel","medicines","illnesses","plans","userToken","loginHelperState","txt","errorMsg","emailError","pwError","registerHelperState","pwText","loginStyles","makeStyles","theme","loginDiv","textAlign","seroful","fontFamily","color","fontSize","fontWeight","fontStyle","images","height","width","button1","backgroundImage","marginTop","marginRight","button2","names","password","helper","textTransform","textTheme","createMuiTheme","palette","primary","main","LoginForm","props","styles","useState","enableRegister","setEnableRegister","useRecoilState","loginHelper","setLoginHelper","registerHelper","setRegisterHelper","userInfo","setUserInfo","pwConfirm","setPwConfirm","error","helperText","pwHelpers","setPwHelpers","useEffect","x","login","firebase","auth","signInWithEmailAndPassword","then","catch","err","code","className","ThemeProvider","Typography","variant","src","molecule","alt","noValidate","autoComplete","TextField","name","label","value","onChange","ev","target","onFocus","type","onBlur","Button","onClick","startIcon","createUserWithEmailAndPassword","api","register","drawerStyles","root","display","drawer","drawerPaper","backgroundColor","opacity","header","mixins","toolbar","PageDrawer","Drawer","classes","paper","anchor","Divider","List","ListItem","button","component","href","ListItemIcon","ListItemText","signOut","Home","Helmet","NotFound","Planner","profileStyles","justifyContent","avatar","top","left","Profile","Avatar","Navigator","exact","path","render","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","init","setInit","user","setUser","setToken","onAuthStateChanged","getIdToken","token","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.e5b608b3.chunk.js","sourcesContent":["import axios from \"axios\";\n/*\n  While in development, http://localhost:4000/ should be used for all API requests.\n  When built, only /path should be used in the axios requests.\n*/\n\n/*\n  import sendgrid here\n  import sendgrid api key here\n*/\n\nexport const users = async (token) => {\n  try {\n    const res = await axios.get(\"http://localhost:4000/users\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    return res;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const createUser = async (username, displayName, email) => {\n  try {\n\n    const res = await axios.post(`/users`, {\n      username: username,\n      displayName: displayName,\n      email: email,\n    });\n    return res;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const messages = async () => {\n  try {\n    const res = await axios.get(\"/messages\");\n    return res;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const profile = async () => {\n  try {\n    const res = await axios.get(\"/profile\");\n    return res;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const videoRoom = async () => {\n  try {\n    const res = await axios.get(\"/video-room\");\n    return res;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n/*\n  registration, cancellation functions here\n  call the registration function (for the email) inside\n  register function in LoginForm.js\n*/\n","import { atom } from \"recoil\";\n\nexport const userState = atom({\n  key: \"userState\",\n  default: {\n    username: \"\",\n    email: \"\",\n    pw: \"\",\n    displayName: \"\",\n    photoURL: \"\",\n    gradeLevel: 0,\n    medicines: [{}],\n    illnesses: [{}],\n    plans: [{}],\n  },\n});\n\nexport const userToken = atom({\n  key: \"userToken\",\n  default: \"\",\n});\n\nexport const msgState = atom({\n  key: \"msgState\",\n  default: \"\",\n});\n\nexport const loginHelperState = atom({\n  key: \"loginHelperState\",\n  default: {\n    txt: \"\",\n    errorMsg: \"\",\n    emailError: false,\n    pwError: false,\n  },\n});\n\nexport const registerHelperState = atom({\n  key: \"registerHelperState\",\n  default: {\n    txt: \"\",\n    pwText: \"\",\n    errorMsg: \"\",\n    emailError: false,\n  },\n});\n","import { makeStyles, createMuiTheme } from \"@material-ui/core/styles\";\n\nexport const loginStyles = makeStyles((theme) => ({\n  loginDiv: {\n    textAlign: \"center\",\n  },\n  seroful: {\n    fontFamily: \"Happy Monkey\",\n    color: \"#F2EDEB\",\n    fontSize: \"56px\",\n    fontWeight: \"bold\",\n    fontStyle: \"italic\",\n  },\n  images: {\n    height: 350,\n    width: 350,\n  },\n  button1: {\n    backgroundImage:\n      \"linear-gradient(90deg, rgba(236,217,238,1) 0%, rgba(226,221,220,1) 51%, rgba(236,217,238,1) 100%);\",\n    width: \"9.5%\",\n    marginTop: \".5%\",\n    marginRight: \"1%\",\n  },\n  button2: {\n    backgroundImage:\n      \"linear-gradient(90deg, rgba(236,217,238,1) 0%, rgba(226,221,220,1) 51%, rgba(236,217,238,1) 100%);\",\n    marginTop: \".5%\",\n    width: \"9.5%\",\n  },\n  email: {\n    width: \"20%\",\n  },\n  username: {\n    width: \"20%\",\n  },\n  names: {\n    width: \"20%\",\n  },\n  password: {\n    width: \"20%\",\n  },\n  helper: {\n    fontStyle: \"italic\",\n    color: \"#FF0000\",\n    fontSize: 20,\n    fontFamily: \"Happy Monkey\",\n    textTransform: \"capitalize\",\n  },\n}));\n\nexport const textTheme = createMuiTheme({\n    palette: {\n      primary: {\n          main: \"#F2EDEB\"\n      }\n    },\n});\n","import React, { useEffect, useState } from \"react\";\n\nimport { Button, TextField, Typography } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport * as api from \"../../util/api\";\n\nimport {\n  userState,\n  loginHelperState,\n  registerHelperState,\n} from \"../../store/store\";\nimport { useRecoilState } from \"recoil\";\n\nimport molecule from \"../../resources/molecule.png\";\nimport { loginStyles, textTheme } from \"../../styles/loginStyles\";\n\nexport const LoginForm = (props) => {\n  const styles = loginStyles();\n  const [enableRegister, setEnableRegister] = useState(false);\n  // eslint-disable-next-line\n  const [loginHelper, setLoginHelper] = useRecoilState(loginHelperState);\n  const [registerHelper, setRegisterHelper] = useRecoilState(\n    registerHelperState\n  );\n  const [userInfo, setUserInfo] = useRecoilState(userState);\n  const [pwConfirm, setPwConfirm] = useState(\"\");\n  const [pwHelpers, setPwHelpers] = useState({\n    error: false,\n    helperText: \"\",\n  });\n\n  useEffect(() => {\n    if (loginHelper.errorMsg) {\n      if (loginHelper.errorMsg === \"auth/invalid-email\") {\n        setLoginHelper(\n          (x) =>\n            (x = {\n              ...x,\n              txt: \"Oh noes, that's an invalid email!\",\n              emailError: true,\n            })\n        );\n      } else if (loginHelper.errorMsg === \"auth/user-not-found\") {\n        setLoginHelper(\n          (x) =>\n            (x = {\n              ...x,\n              txt: \"Dangit, that email isn't registered!\",\n              emailError: true,\n            })\n        );\n      } else if (loginHelper.errorMsg === \"auth/wrong-password\") {\n        setLoginHelper(\n          (x) =>\n            (x = {\n              ...x,\n              pwText:\n                \"Aw man, that's the wrong password! Remember, it's case-sensitive!\",\n              pwError: true,\n            })\n        );\n      }\n    }\n  }, [loginHelper.errorMsg]);\n\n  useEffect(() => {\n    if (registerHelper.errorMsg) {\n      if (registerHelper.errorMsg === \"auth/email-already-in-use\") {\n        setRegisterHelper(\n          (x) =>\n            (x = {\n              ...x,\n              txt:\n                \"Aw snap, that email is already in use! Did you mean to login?\",\n              emailError: true,\n            })\n        );\n      } else if (registerHelper.errorMsg === \"auth/invalid-email\") {\n        setRegisterHelper(\n          (x) =>\n            (x = {\n              ...x,\n              txt: \"Oh noes, that's an invalid email!\",\n              emailError: true,\n            })\n        );\n      }\n    }\n  }, [registerHelper.errorMsg]);\n\n  useEffect(() => {\n    if (pwConfirm && pwConfirm !== userInfo.pw) {\n      setPwHelpers(\n        (x) => (x = { error: true, helperText: \"Passwords do not match!\" })\n      );\n    } else {\n      setPwHelpers((x) => (x = { error: false, helperText: \"\" }));\n    }\n  }, [pwConfirm]);\n\n  const login = async () => {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(userInfo.email, userInfo.pw)\n      .then(console.log(`User has triggered a login attempt.`))\n      .catch((err) => {\n        setLoginHelper((x) => (x = { ...x, errorMsg: err.code }));\n        console.log(err);\n      });\n    setUserInfo(\n      (x) => (x = { pw: \"\", email: \"\", username: \"\", displayName: \"\" })\n    );\n  };\n  //\n  const register = () => {\n    const { username, displayName, email, pw } = userInfo;\n    console.log(username, displayName, email);\n    try {\n      firebase.auth().createUserWithEmailAndPassword(email, pw);\n      // .then(console.log(\"User has triggered a registration attempt.\"))\n      // .catch((err) => {\n      //   setRegisterHelper((x) => (x = { ...x, errorMsg: err.code }));\n      //   console.log(err);\n      // });\n      api.createUser(username, displayName, email);\n    } catch (err) {\n      setRegisterHelper((x) => (x = { ...x, errorMsg: err.code }));\n      console.log(err);\n    }\n    setUserInfo(\n      (x) => (x = { pw: \"\", email: \"\", username: \"\", displayName: \"\" })\n    );\n  };\n\n  return (\n    <>\n      {!enableRegister ? (\n        <div className={styles.loginDiv}>\n          <ThemeProvider theme={textTheme}>\n            <Typography className={styles.seroful} variant=\"h3\">\n              Seroful\n            </Typography>\n            <img className={styles.images} src={molecule} alt=\"molecule.png\" />\n            <br />\n            <form noValidate autoComplete=\"off\">\n              <TextField\n                label=\"Email\"\n                variant=\"filled\"\n                className={styles.email}\n                error={loginHelper.emailError}\n                helperText={loginHelper.txt}\n                value={userInfo.email}\n                onFocus={() =>\n                  setLoginHelper(\n                    (x) => (x = { ...x, emailError: false, txt: \"\" })\n                  )\n                }\n                onChange={(ev) =>\n                  setUserInfo((x) => (x = { ...x, email: ev.target.value }))\n                }\n              />\n              <br />\n              <TextField\n                label=\"Password\"\n                type=\"password\"\n                variant=\"filled\"\n                className={styles.password}\n                error={loginHelper.pwError}\n                helperText={loginHelper.pwText}\n                value={userInfo.pw}\n                onFocus={() =>\n                  setLoginHelper(\n                    (x) => (x = { ...x, pwError: false, pwText: \"\" })\n                  )\n                }\n                onChange={(ev) =>\n                  setUserInfo((x) => (x = { ...x, pw: ev.target.value }))\n                }\n              />\n              <br />\n              <Button\n                variant=\"contained\"\n                className={styles.button1}\n                onClick={() => login()}\n              >\n                Login\n              </Button>\n              <Button\n                variant=\"contained\"\n                className={styles.button2}\n                onClick={() => setEnableRegister(true)}\n              >\n                Register\n              </Button>\n            </form>\n          </ThemeProvider>\n        </div>\n      ) : (\n        <div className={styles.loginDiv}>\n          <ThemeProvider theme={textTheme}>\n            <Typography className={styles.seroful} variant=\"h3\">\n              Seroful\n            </Typography>\n            <img className={styles.images} src={molecule} alt=\"molecule.png\" />\n            <form noValidate autoComplete=\"off\">\n              <TextField\n                name=\"display\"\n                label=\"Display Name\"\n                variant=\"filled\"\n                className={styles.names}\n                value={userInfo.displayName}\n                onChange={(ev) =>\n                  setUserInfo(\n                    (x) => (x = { ...x, displayName: ev.target.value })\n                  )\n                }\n              />\n              <br />\n              <TextField\n                name=\"username\"\n                label=\"Username\"\n                variant=\"filled\"\n                className={styles.username}\n                value={userInfo.username}\n                onChange={(ev) =>\n                  setUserInfo((x) => (x = { ...x, username: ev.target.value }))\n                }\n              />\n              <br />\n              <br />\n              <TextField\n                error={registerHelper.emailError}\n                helperText={registerHelper.txt}\n                name=\"email\"\n                onFocus={() =>\n                  setRegisterHelper(\n                    (x) => (x = { ...x, emailError: false, txt: \"\" })\n                  )\n                }\n                label=\"Email\"\n                variant=\"filled\"\n                className={styles.email}\n                value={userInfo.email}\n                onChange={(ev) =>\n                  setUserInfo((x) => (x = { ...x, email: ev.target.value }))\n                }\n              />\n              <br />\n              <TextField\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                variant=\"filled\"\n                className={styles.password}\n                value={userInfo.pw}\n                onChange={(ev) =>\n                  setUserInfo((x) => (x = { ...x, pw: ev.target.value }))\n                }\n              />\n              <br />\n              <TextField\n                error={pwHelpers.error}\n                helperText={pwHelpers.helperText}\n                label=\"Confirm Password\"\n                type=\"password\"\n                variant=\"filled\"\n                value={pwConfirm}\n                className={styles.password}\n                onBlur={() =>\n                  setPwHelpers((x) => (x = { helperText: \"\", error: false }))\n                }\n                onChange={(ev) => setPwConfirm(ev.target.value)}\n              />\n              <br />\n              <Button\n                variant=\"contained\"\n                className={styles.button1}\n                onClick={() => setEnableRegister(false)}\n                startIcon={<ArrowBackIcon />}\n              >\n                Back to Login\n              </Button>\n              <Button\n                variant=\"contained\"\n                className={styles.button2}\n                onClick={() => register()}\n              >\n                Register\n              </Button>\n            </form>\n          </ThemeProvider>\n        </div>\n      )}\n    </>\n  );\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const drawerStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  drawer: {\n    width: 151.5,\n  },\n  drawerPaper: {\n    backgroundColor: \"#F2EDEB\",\n    opacity: 0.85,\n    width: 151.5,\n  },\n  header: theme.mixins.toolbar,\n  seroful: {\n    marginTop: \"7.5%\",\n    textAlign: \"center\",\n    fontFamily: \"Happy Monkey\",\n    color: \"#bd93bd\",\n    fontSize: \"35px\",\n    fontWeight: \"bold\",\n    fontStyle: \"italic\",\n  },\n}));\n","import React from \"react\";\n\nimport {\n  Button,\n  Divider,\n  Typography,\n  Drawer,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Link,\n} from \"@material-ui/core/\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport FolderOpenIcon from \"@material-ui/icons/FolderOpen\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport MenuBookIcon from \"@material-ui/icons/MenuBook\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\n\nimport { drawerStyles } from \"../../styles/drawerStyles\";\n\nexport const PageDrawer = () => {\n  const styles = drawerStyles();\n\n  const logout = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => console.log(\"User signed out.\"));\n  };\n\n  return (\n    <>\n      <Drawer\n        className={styles.drawer}\n        variant=\"permanent\"\n        classes={{ paper: styles.drawerPaper }}\n        anchor=\"left\"\n      >\n        <div className={styles.header}>\n          <Typography className={styles.seroful} variant=\"h3\">\n            Seroful\n          </Typography>\n        </div>\n        <Divider />\n        <List>\n          <ListItem button key=\"Home\" component=\"a\" href=\"/\">\n            <ListItemIcon>\n              <HomeIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Home\" />\n          </ListItem>\n          <ListItem button key=\"Profile\" component=\"a\" href=\"/profile\">\n            <ListItemIcon>\n              <PersonIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Profile\" />\n          </ListItem>\n          <ListItem button key=\"Friends\">\n            <ListItemIcon>\n              <PeopleIcon />\n            </ListItemIcon>\n            <ListItemText\n              primary=\"Friends\"\n              onClick={() => console.log(\"put a menu here soon\")}\n            />\n          </ListItem>\n          <ListItem button key=\"Planner\">\n            <ListItemIcon>\n              <FolderOpenIcon />\n            </ListItemIcon>\n            <ListItemText\n              primary=\"Planner\"\n              onClick={() => console.log(\"put a menu here soon\")}\n            />\n          </ListItem>\n          <ListItem button key=\"Journal\">\n            <ListItemIcon>\n              <MenuBookIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Journal\" />\n          </ListItem>\n          <ListItem button key=\"Settings\">\n            <ListItemIcon>\n              <SettingsIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Settings\" />\n          </ListItem>\n          <ListItem button key=\"Sign Out\" onClick={() => logout()}>\n            <ListItemIcon>\n              <ExitToAppIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Sign Out\" />\n          </ListItem>\n        </List>\n      </Drawer>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\n\nimport { PageDrawer } from \"../../PageDrawer/PageDrawer\";\nimport { homeStyles } from \"../../../styles/homeStyles\";\n\nexport const Home = () => {\n  return (\n    <>\n      <Helmet>\n        <title>Seroful - Home</title>\n      </Helmet>\n      <PageDrawer />\n    </>\n  );\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const homeStyles = makeStyles((theme) => ({\n}));\n","import React from \"react\";\n\nexport const NotFound = () => {\n    return <h3>This is the not found page. Do stuff here</h3>\n}","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nimport { PageDrawer } from \"../../PageDrawer/PageDrawer\";\n\nexport const Planner = (props) => {\n  return (\n    <>\n      <Helmet>\n        <title> Seroful - User's Production Planner</title>\n      </Helmet>\n      <PageDrawer />\n      <h1>something here</h1>\n    </>\n  );\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const profileStyles = makeStyles((theme) => ({\n    main: {\n        display: \"flex\",\n        justifyContent: \"baseline\",\n    },\n    avatar: {\n        width: 100,\n        height: 100,\n        top: \"5vh\",\n        left: \"20vw\",\n    }\n}));\n","import { StylesContext } from \"@material-ui/styles\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nimport { PageDrawer } from \"../../PageDrawer/PageDrawer\";\nimport { profileStyles } from \"../../../styles/profileStyles\";\nimport { Avatar } from \"@material-ui/core\";\n\nexport const Profile = (props) => {\n  const styles = profileStyles();\n\n  return (\n    <>\n      <Helmet>\n        <title> Seroful - User's Profile</title>\n      </Helmet>\n      <PageDrawer />\n      <div className={styles.main}>\n        <Avatar alt=\"placeholder\" className={styles.avatar}>JD</Avatar>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { Home, NotFound, Planner, Profile } from \"../Pages/index\";\n\nexport const Navigator = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" render={() => <Home />} />\n      // TODO: Make route for profile /users/(username or uid)/profile\n      <Route path=\"/profile\" render={() => <Profile />} />\n      // TODO: Make route for planner /users/(username or uid)/planner\n      <Route path=\"/planner\" render={() => <Planner />} />\n      <Route path=\"*\" render={() => <NotFound />} />\n    </Switch>\n  </BrowserRouter>\n);\n","import React, { useState, useEffect } from \"react\";\n\nimport { LoginForm } from \"./components/LoginForm/LoginForm\";\nimport { Navigator } from \"./components/Navigator/Navigator\";\nimport \"./App.css\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nimport { firebaseConfig } from \"./config\";\nimport { useRecoilState } from \"recoil\";\nimport { userToken } from \"./store/store\";\n\nfirebase.initializeApp(firebaseConfig);\n\nfunction App() {\n  const [init, setInit] = useState(true);\n  const [user, setUser] = useState();\n\n  // eslint-disable-next-line\n  const [token, setToken] = useRecoilState(userToken);\n\n  const onAuthStateChanged = async (user) => {\n    setUser(user);\n    if (user) {\n      const token = await user.getIdToken();\n      setToken(token);\n    }\n\n    if (init) setInit(false);\n  };\n\n  useEffect(() => {\n    const subscriber = firebase.auth().onAuthStateChanged(onAuthStateChanged);\n    return subscriber;\n    // eslint-disable-next-line\n  }, []);\n\n  if (init) return null;\n  if (!user) {\n    return <LoginForm />;\n  }\n  return (\n    <>\n      <Navigator />\n    </>\n  );\n}\nexport default App;","export const firebaseConfig = {\n    apiKey: \"AIzaSyBJg9iVnvGl6F5TFBRTmoWn-3A5IxTgywI\",\n    authDomain: \"seroful.firebaseapp.com\",\n    databaseURL: \"https://seroful.firebaseio.com\",\n    projectId: \"seroful\",\n    storageBucket: \"seroful.appspot.com\",\n    messagingSenderId: \"531332449318\",\n    appId: \"1:531332449318:web:9b85133f0399aa898fd2e7\",\n    measurementId: \"G-XYW74Z91MJ\",\n  };\n  ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { RecoilRoot } from \"recoil\";\n\nReactDOM.render(\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/molecule.12ccad98.png\";"],"sourceRoot":""}